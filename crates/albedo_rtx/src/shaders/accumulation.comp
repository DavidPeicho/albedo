#version 450

#extension GL_GOOGLE_include_directive : enable

#include "structures.comp"

/**
 * Layout 0.
 */

layout (set = 0, binding = 0, std430) readonly buffer RayBuffer {
  RayPayload rays[];
};
layout(set = 0, binding = 1, rgba32f) uniform image2D uRenderTarget;
layout (set = 0, binding = 2) uniform GlobalUniformBuffer {
  uint frame;
} GlobalUniforms;

layout(local_size_x = 8, local_size_y = 8) in;
void
main()
{
  // uvec3 dimensions = gl_NumWorkGroups * gl_WorkGroupSize;
  uvec3 dimensions = uvec3(1600, 1200, 1);
  uvec2 numworkGroups = uvec2(dimensions.x / 8, dimensions.y / 8);
  uint index =
    gl_GlobalInvocationID.z * gl_WorkGroupSize.x * numworkGroups.x * gl_WorkGroupSize.y * numworkGroups.y +
    gl_GlobalInvocationID.y * gl_WorkGroupSize.x * numworkGroups.x +
    gl_GlobalInvocationID.x;

  RayPayload ray = rays[index];

  ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
  vec4 c = vec4(0.0);
  if (GlobalUniforms.frame > 1)
  {
    c = imageLoad(uRenderTarget, coords);
  }
  imageStore(uRenderTarget, coords, c + vec4(ray.radiance.rgb, 1.0));
}
